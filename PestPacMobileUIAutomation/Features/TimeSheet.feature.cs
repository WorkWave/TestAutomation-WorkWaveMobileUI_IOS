// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace WorkWave.Workwave.Mobile.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("TimeSheet")]
    [NUnit.Framework.CategoryAttribute("TimeSheet")]
    public partial class TimeSheetFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "TimeSheet.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "TimeSheet", null, ProgrammingLanguage.CSharp, new string[] {
                        "TimeSheet"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute(@"Time All In ,Time All Out,Add Team Break/Travel/Lunch,End Team Break/Travel/Lunch for All,Time Single Technician In,Time Single Technician Out,Add Lunch/Travel/Break Event for Single Technician,End Lunch/Travel/Break Event for Single Technician,Start Work Order before any Team Member Timed In for the Day")]
        public virtual void TimeAllInTimeAllOutAddTeamBreakTravelLunchEndTeamBreakTravelLunchForAllTimeSingleTechnicianInTimeSingleTechnicianOutAddLunchTravelBreakEventForSingleTechnicianEndLunchTravelBreakEventForSingleTechnicianStartWorkOrderBeforeAnyTeamMemberTimedInForTheDay()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"Time All In ,Time All Out,Add Team Break/Travel/Lunch,End Team Break/Travel/Lunch for All,Time Single Technician In,Time Single Technician Out,Add Lunch/Travel/Break Event for Single Technician,End Lunch/Travel/Break Event for Single Technician,Start Work Order before any Team Member Timed In for the Day", null, ((string[])(null)));
#line 6
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
 testRunner.Given("Logged Out", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "Email",
                        "mdelgoda+tml@workwave.com"});
            table1.AddRow(new string[] {
                        "Password",
                        "WorkWave1!"});
#line 8
 testRunner.When("I Login", ((string)(null)), table1, "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "TeamCount",
                        "3"});
#line 12
 testRunner.When("Time All In", ((string)(null)), table2, "When ");
#line 15
 testRunner.Then("Verify Time All In", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "TeamCount",
                        "3"});
            table3.AddRow(new string[] {
                        "Event",
                        "Team Lunch"});
#line 16
 testRunner.When("Add Team Event", ((string)(null)), table3, "When ");
#line 20
 testRunner.Then("Verify Team Event Added", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table4.AddRow(new string[] {
                        "TeamCount",
                        "3"});
            table4.AddRow(new string[] {
                        "Event",
                        "Team Lunch"});
#line 21
 testRunner.When("End Team Event for All", ((string)(null)), table4, "When ");
#line 25
 testRunner.Then("Verify End Team Event", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "TeamCount",
                        "3"});
            table5.AddRow(new string[] {
                        "Event",
                        "Team Break"});
#line 26
 testRunner.When("Add Team Event", ((string)(null)), table5, "When ");
#line 30
 testRunner.Then("Verify Team Event Added", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table6.AddRow(new string[] {
                        "TeamCount",
                        "3"});
            table6.AddRow(new string[] {
                        "Event",
                        "Team Break"});
#line 31
 testRunner.When("End Team Event for All", ((string)(null)), table6, "When ");
#line 35
 testRunner.Then("Verify End Team Event", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table7.AddRow(new string[] {
                        "TeamCount",
                        "3"});
            table7.AddRow(new string[] {
                        "Event",
                        "Team Travel Time"});
#line 36
 testRunner.When("Add Team Event", ((string)(null)), table7, "When ");
#line 40
 testRunner.Then("Verify Team Event Added", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table8.AddRow(new string[] {
                        "TeamCount",
                        "3"});
            table8.AddRow(new string[] {
                        "Event",
                        "Team Travel Time"});
#line 41
 testRunner.When("End Team Event for All", ((string)(null)), table8, "When ");
#line 45
 testRunner.Then("Verify End Team Event", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table9.AddRow(new string[] {
                        "TeamCount",
                        "3"});
#line 46
 testRunner.When("Time All Out", ((string)(null)), table9, "When ");
#line 49
 testRunner.Then("Verify Time All Out", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table10.AddRow(new string[] {
                        "TeamCount",
                        "3"});
            table10.AddRow(new string[] {
                        "TeamMemberName",
                        "Team Member 1"});
#line 50
 testRunner.When("Time Single Technician In", ((string)(null)), table10, "When ");
#line 54
 testRunner.Then("Verify Time Single Technician In", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table11.AddRow(new string[] {
                        "TeamCount",
                        "3"});
            table11.AddRow(new string[] {
                        "TeamMemberName",
                        "Team Member 1"});
            table11.AddRow(new string[] {
                        "Event",
                        "Lunch"});
#line 55
 testRunner.When("Add Event for Single Technician", ((string)(null)), table11, "When ");
#line 60
 testRunner.Then("Verify Add Event for Single Technician", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 61
 testRunner.When("End Event for Single Technician", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 62
 testRunner.Then("Verify End Event for Single Technician", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table12.AddRow(new string[] {
                        "TeamCount",
                        "3"});
            table12.AddRow(new string[] {
                        "TeamMemberName",
                        "Team Member 1"});
            table12.AddRow(new string[] {
                        "Event",
                        "Travel Time"});
#line 63
 testRunner.When("Add Event for Single Technician", ((string)(null)), table12, "When ");
#line 68
 testRunner.Then("Verify Add Event for Single Technician", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 69
 testRunner.When("End Event for Single Technician", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 70
 testRunner.Then("Verify End Event for Single Technician", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table13.AddRow(new string[] {
                        "TeamCount",
                        "3"});
            table13.AddRow(new string[] {
                        "TeamMemberName",
                        "Team Member 1"});
            table13.AddRow(new string[] {
                        "Event",
                        "Break"});
#line 71
 testRunner.When("Add Event for Single Technician", ((string)(null)), table13, "When ");
#line 76
 testRunner.Then("Verify Add Event for Single Technician", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 77
 testRunner.When("End Event for Single Technician", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 78
 testRunner.Then("Verify End Event for Single Technician", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 79
 testRunner.When("Time Single Technician Out", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 80
 testRunner.Then("Verify Time Single Technician Out", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 81
 testRunner.When("Start WorkOrder Without TimeIn", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 82
 testRunner.Then("Verify Not Able to Start WorkOrder Without TimeIn", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

