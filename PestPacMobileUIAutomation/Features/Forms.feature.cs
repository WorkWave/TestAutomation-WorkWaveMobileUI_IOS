// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace WorkWave.Workwave.Mobile.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Forms")]
    [NUnit.Framework.CategoryAttribute("Forms")]
    public partial class FormsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Forms.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Forms", null, ProgrammingLanguage.CSharp, new string[] {
                        "Forms"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add A Forms,Interact with Complete Form")]
        public virtual void AddAFormsInteractWithCompleteForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add A Forms,Interact with Complete Form", null, ((string[])(null)));
#line 5
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "DetailsNeeded",
                        "false"});
#line 6
 testRunner.Given("Not Started Order Opened", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "FormType",
                        "Ios_Test Form"});
#line 9
 testRunner.When("Form Added", ((string)(null)), table2, "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "FieldName",
                        "Given Name Text Box"});
#line 12
 testRunner.When("Fill The Form", ((string)(null)), table3, "When ");
#line 15
 testRunner.When("Complete Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
 testRunner.Then("Verify Form Added", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Edit Form → Save Draft,Edit Form → Preview,Delete a Draft Form,Interact with Draf" +
            "t Form")]
        public virtual void EditFormSaveDraftEditFormPreviewDeleteADraftFormInteractWithDraftForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit Form → Save Draft,Edit Form → Preview,Delete a Draft Form,Interact with Draf" +
                    "t Form", null, ((string[])(null)));
#line 19
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table4.AddRow(new string[] {
                        "DetailsNeeded",
                        "false"});
#line 20
 testRunner.Given("Not Started Order Opened", ((string)(null)), table4, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "FormType",
                        "Ios_Test Form"});
#line 23
 testRunner.When("Form Added", ((string)(null)), table5, "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table6.AddRow(new string[] {
                        "FieldName",
                        "Given Name Text Box"});
#line 26
 testRunner.When("Fill The Form", ((string)(null)), table6, "When ");
#line 29
 testRunner.When("Save Form As A Draft", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 30
 testRunner.Then("Verify Form Drafted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 31
 testRunner.When("Drafted Form Opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
 testRunner.When("Preview Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 33
 testRunner.Then("Verify Preview Loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 34
 testRunner.When("Draft Form Delete", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 35
 testRunner.Then("Verify Form Deleted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add Form To Favorites,Unfavorite a Form Template")]
        public virtual void AddFormToFavoritesUnfavoriteAFormTemplate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add Form To Favorites,Unfavorite a Form Template", null, ((string[])(null)));
#line 40
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table7.AddRow(new string[] {
                        "DetailsNeeded",
                        "false"});
#line 41
 testRunner.Given("Not Started Order Opened", ((string)(null)), table7, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table8.AddRow(new string[] {
                        "FormType",
                        "Ios_Test Form"});
#line 44
 testRunner.When("Form Favorited", ((string)(null)), table8, "When ");
#line 47
 testRunner.Then("Verify Form Favorited", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 48
 testRunner.When("Form Unfavorited", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 49
 testRunner.Then("Verify Form Unfavorited", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Edit Form → Insert Image → Pick from Gallery,Edit Form → Insert Image → Take a Ph" +
            "oto,Edit Form → Clear All Fields,Edit Form → Insert Image → Location Images,Inse" +
            "rt Image → Location Images")]
        public virtual void EditFormInsertImagePickFromGalleryEditFormInsertImageTakeAPhotoEditFormClearAllFieldsEditFormInsertImageLocationImagesInsertImageLocationImages()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit Form → Insert Image → Pick from Gallery,Edit Form → Insert Image → Take a Ph" +
                    "oto,Edit Form → Clear All Fields,Edit Form → Insert Image → Location Images,Inse" +
                    "rt Image → Location Images", null, ((string[])(null)));
#line 52
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table9.AddRow(new string[] {
                        "DetailsNeeded",
                        "false"});
#line 53
 testRunner.Given("Not Started Order Opened", ((string)(null)), table9, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table10.AddRow(new string[] {
                        "DocumentType",
                        "Pick from Gallery"});
            table10.AddRow(new string[] {
                        "DocumentName",
                        "autoDoc"});
#line 56
 testRunner.When("Add Image To Media Gallery", ((string)(null)), table10, "When ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table11.AddRow(new string[] {
                        "FormType",
                        "WorkWave Test Automation Form Example"});
#line 60
 testRunner.When("Form Added", ((string)(null)), table11, "When ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table12.AddRow(new string[] {
                        "FieldName",
                        "Text Field: Client Name"});
#line 63
 testRunner.When("Fill Form Fields", ((string)(null)), table12, "When ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table13.AddRow(new string[] {
                        "FormType",
                        "WorkWave Test Automation Form Example"});
            table13.AddRow(new string[] {
                        "DocumentType",
                        "Pick from Gallery"});
#line 66
 testRunner.When("Insert Image To Form", ((string)(null)), table13, "When ");
#line 70
 testRunner.Then("Verify Image Added", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table14.AddRow(new string[] {
                        "FormType",
                        "WorkWave Test Automation Form Example"});
            table14.AddRow(new string[] {
                        "DocumentType",
                        "Take a Photo"});
#line 71
 testRunner.When("Insert Image To Form", ((string)(null)), table14, "When ");
#line 75
 testRunner.Then("Verify Image Added", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 76
 testRunner.When("All Form Fields Cleared", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 77
 testRunner.Then("Verify All Form Fields Cleared", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table15.AddRow(new string[] {
                        "FormType",
                        "WorkWave Test Automation Form Example"});
            table15.AddRow(new string[] {
                        "DocumentType",
                        "Location Images"});
#line 78
 testRunner.When("Insert Image To Form", ((string)(null)), table15, "When ");
#line 82
 testRunner.Then("Verify Image Added", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Edit Form → Interact with Read-only Fields,Edit Form → Interact with Required Fie" +
            "lds")]
        public virtual void EditFormInteractWithRead_OnlyFieldsEditFormInteractWithRequiredFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit Form → Interact with Read-only Fields,Edit Form → Interact with Required Fie" +
                    "lds", null, ((string[])(null)));
#line 85
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table16.AddRow(new string[] {
                        "DetailsNeeded",
                        "false"});
#line 86
 testRunner.Given("Not Started Order Opened", ((string)(null)), table16, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table17.AddRow(new string[] {
                        "FormType",
                        "Ios_Test Form"});
#line 89
 testRunner.When("Form Added", ((string)(null)), table17, "When ");
#line 92
 testRunner.When("Start Form Editing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table18.AddRow(new string[] {
                        "FieldName",
                        "Family Name Text Box"});
#line 93
 testRunner.When("Search For Field", ((string)(null)), table18, "When ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table19.AddRow(new string[] {
                        "Status",
                        "Readonly"});
#line 96
 testRunner.Then("Verify Search Result", ((string)(null)), table19, "Then ");
#line 99
 testRunner.Then("Verify ReadOnly Field Is Not Editable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table20.AddRow(new string[] {
                        "FieldName",
                        "Given Name Text Box"});
#line 100
 testRunner.When("Required Feilds Filled", ((string)(null)), table20, "When ");
#line 103
 testRunner.Then("Verify Required Fields Completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 104
 testRunner.Then("ReturnsToHome", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Edit Form → Interact with Fields Editable After Customer Signs")]
        public virtual void EditFormInteractWithFieldsEditableAfterCustomerSigns()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit Form → Interact with Fields Editable After Customer Signs", null, ((string[])(null)));
#line 107
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table21.AddRow(new string[] {
                        "DetailsNeeded",
                        "false"});
#line 108
 testRunner.Given("Not Started Order Opened", ((string)(null)), table21, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table22.AddRow(new string[] {
                        "Status",
                        "Signed"});
#line 111
 testRunner.When("Search Forms", ((string)(null)), table22, "When ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table23.AddRow(new string[] {
                        "FieldName",
                        "Country Combo Box"});
#line 114
 testRunner.Then("Verify Fields Editable After Customer Signs", ((string)(null)), table23, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Edit Form → Clear Non-Auto Fields")]
        public virtual void EditFormClearNon_AutoFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit Form → Clear Non-Auto Fields", null, ((string[])(null)));
#line 119
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table24.AddRow(new string[] {
                        "DetailsNeeded",
                        "false"});
#line 120
 testRunner.Given("Not Started Order Opened", ((string)(null)), table24, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table25.AddRow(new string[] {
                        "FormType",
                        "Mapped QA"});
#line 123
 testRunner.When("Form Added", ((string)(null)), table25, "When ");
#line 126
 testRunner.When("Start Form Editing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 127
 testRunner.When("Clear Non Auto Fields", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 128
 testRunner.Then("Verify Non Auto Fields Cleared", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 129
 testRunner.Then("ReturnsToHome", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Edit Form → Send Form → Customer Role,Interact with Out for Signature Form")]
        public virtual void EditFormSendFormCustomerRoleInteractWithOutForSignatureForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit Form → Send Form → Customer Role,Interact with Out for Signature Form", null, ((string[])(null)));
#line 132
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table26.AddRow(new string[] {
                        "DetailsNeeded",
                        "false"});
#line 133
 testRunner.Given("Not Started Order Opened", ((string)(null)), table26, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table27.AddRow(new string[] {
                        "FormType",
                        "Ios_Test Form"});
#line 136
 testRunner.When("Form Added", ((string)(null)), table27, "When ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table28.AddRow(new string[] {
                        "FieldName",
                        "Given Name Text Box"});
#line 139
 testRunner.When("Fill The Form", ((string)(null)), table28, "When ");
#line 142
 testRunner.Then("Verify Required Fields Completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table29.AddRow(new string[] {
                        "Role",
                        "Customer"});
            table29.AddRow(new string[] {
                        "Email",
                        "mdelgoda+1@workwave.com"});
#line 143
 testRunner.When("Send The Form", ((string)(null)), table29, "When ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table30.AddRow(new string[] {
                        "Status",
                        "Out for Signature"});
#line 147
 testRunner.Then("Verify Sending Successful", ((string)(null)), table30, "Then ");
#line 150
 testRunner.Then("Verify Form Interactable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Edit Form → Send Form → Internal Role,Interact with In Progress Form")]
        public virtual void EditFormSendFormInternalRoleInteractWithInProgressForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit Form → Send Form → Internal Role,Interact with In Progress Form", null, ((string[])(null)));
#line 153
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table31.AddRow(new string[] {
                        "DetailsNeeded",
                        "false"});
#line 154
 testRunner.Given("Not Started Order Opened", ((string)(null)), table31, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table32.AddRow(new string[] {
                        "FormType",
                        "Ios_Test Form"});
#line 157
 testRunner.When("Form Added", ((string)(null)), table32, "When ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table33.AddRow(new string[] {
                        "FieldName",
                        "Given Name Text Box"});
#line 160
 testRunner.When("Fill The Form", ((string)(null)), table33, "When ");
#line 163
 testRunner.Then("Verify Required Fields Completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table34.AddRow(new string[] {
                        "Role",
                        "Administrator"});
            table34.AddRow(new string[] {
                        "Name",
                        "Maheshika Delgoda"});
            table34.AddRow(new string[] {
                        "Email",
                        "mdelgoda+qa@workwave.com"});
#line 164
 testRunner.When("Send The Form", ((string)(null)), table34, "When ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table35.AddRow(new string[] {
                        "Status",
                        "In Progress"});
#line 169
 testRunner.Then("Verify Sending Successful", ((string)(null)), table35, "Then ");
#line 172
 testRunner.Then("Verify Form Interactable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Interact with Signed Form")]
        public virtual void InteractWithSignedForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Interact with Signed Form", null, ((string[])(null)));
#line 175
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table36.AddRow(new string[] {
                        "DetailsNeeded",
                        "false"});
#line 176
 testRunner.Given("Not Started Order Opened", ((string)(null)), table36, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table37.AddRow(new string[] {
                        "Status",
                        "Signed"});
#line 179
 testRunner.When("Search Forms", ((string)(null)), table37, "When ");
#line 182
 testRunner.Then("Verify Form Editor Displaying", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Interact with Canceled Form")]
        public virtual void InteractWithCanceledForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Interact with Canceled Form", null, ((string[])(null)));
#line 185
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table38.AddRow(new string[] {
                        "DetailsNeeded",
                        "false"});
#line 186
 testRunner.Given("Not Started Order Opened", ((string)(null)), table38, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table39.AddRow(new string[] {
                        "Status",
                        "Canceled"});
#line 189
 testRunner.When("Search Forms", ((string)(null)), table39, "When ");
#line 192
 testRunner.Then("Verify Form Editor Not Displaying", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Edit Form → Populate Date field,Populate Dropdown from Options Defined in Adobe,P" +
            "opulate Text field, Populate Multi-line Text field")]
        public virtual void EditFormPopulateDateFieldPopulateDropdownFromOptionsDefinedInAdobePopulateTextFieldPopulateMulti_LineTextField()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit Form → Populate Date field,Populate Dropdown from Options Defined in Adobe,P" +
                    "opulate Text field, Populate Multi-line Text field", null, ((string[])(null)));
#line 195
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table40.AddRow(new string[] {
                        "DetailsNeeded",
                        "false"});
#line 196
 testRunner.Given("Not Started Order Opened", ((string)(null)), table40, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table41.AddRow(new string[] {
                        "FormType",
                        "Sample Global Form"});
#line 199
 testRunner.When("Form Added", ((string)(null)), table41, "When ");
#line 202
 testRunner.When("Start Form Editing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table42.AddRow(new string[] {
                        "FieldName",
                        "Text Field: Date"});
#line 203
 testRunner.When("Filter Date Field", ((string)(null)), table42, "When ");
#line 206
 testRunner.Then("Verify Date Added", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table43.AddRow(new string[] {
                        "FieldName",
                        "Text Field: Notes"});
            table43.AddRow(new string[] {
                        "Value",
                        "Test Multi Line"});
#line 207
 testRunner.When("Enter Text To Multi-line Text Field", ((string)(null)), table43, "When ");
#line 211
 testRunner.Then("Verify Value Selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table44.AddRow(new string[] {
                        "FieldName",
                        "Choice Field: YardSize"});
            table44.AddRow(new string[] {
                        "Value",
                        "Small"});
#line 212
 testRunner.When("Select Value of DropDown", ((string)(null)), table44, "When ");
#line 216
 testRunner.Then("Verify Value Selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table45.AddRow(new string[] {
                        "FieldName",
                        "Text Field: Name"});
            table45.AddRow(new string[] {
                        "Value",
                        "Test"});
#line 217
 testRunner.When("Enter Text To Text Field", ((string)(null)), table45, "When ");
#line 221
 testRunner.Then("Verify Value Selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 222
 testRunner.Then("ReturnsToHome", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Interact with Declined Form")]
        public virtual void InteractWithDeclinedForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Interact with Declined Form", null, ((string[])(null)));
#line 225
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table46.AddRow(new string[] {
                        "DetailsNeeded",
                        "false"});
#line 226
 testRunner.Given("Not Started Order Opened", ((string)(null)), table46, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table47.AddRow(new string[] {
                        "Status",
                        "Declined"});
#line 229
 testRunner.When("Search Forms", ((string)(null)), table47, "When ");
#line 232
 testRunner.Then("Verify Form Editor Displaying", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Edit Form → Populate Multi-line Text field from Mapped Lookup Values,Populate Tex" +
            "t field from Mapped Lookup Values,Populate Dropdown from Mapped Lookup Values")]
        public virtual void EditFormPopulateMulti_LineTextFieldFromMappedLookupValuesPopulateTextFieldFromMappedLookupValuesPopulateDropdownFromMappedLookupValues()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit Form → Populate Multi-line Text field from Mapped Lookup Values,Populate Tex" +
                    "t field from Mapped Lookup Values,Populate Dropdown from Mapped Lookup Values", null, ((string[])(null)));
#line 236
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table48.AddRow(new string[] {
                        "DetailsNeeded",
                        "false"});
#line 237
 testRunner.Given("Not Started Order Opened", ((string)(null)), table48, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table49.AddRow(new string[] {
                        "FormType",
                        "WorkWave Test Automation Form Example"});
#line 240
 testRunner.When("Form Added", ((string)(null)), table49, "When ");
#line 243
 testRunner.When("Start Form Editing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table50.AddRow(new string[] {
                        "FieldName",
                        "Text Field: Notes"});
            table50.AddRow(new string[] {
                        "Value",
                        "Towel"});
#line 244
 testRunner.When("Enter Text To Multi-line Text Field From Mapped Lookup Values", ((string)(null)), table50, "When ");
#line 248
 testRunner.Then("Verify Value Added", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table51.AddRow(new string[] {
                        "FieldName",
                        "Text Field: Client Name"});
            table51.AddRow(new string[] {
                        "Value",
                        "Cleaning Auto"});
#line 249
 testRunner.When("Enter Text To Text Field From Mapped Lookup Values", ((string)(null)), table51, "When ");
#line 253
 testRunner.Then("Verify Value Added", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table52.AddRow(new string[] {
                        "FieldName",
                        "Choice Field: Technician"});
            table52.AddRow(new string[] {
                        "Value",
                        "Maheshika Delgoda"});
#line 254
 testRunner.When("Select Value of DropDown From Mapped Lookup Values", ((string)(null)), table52, "When ");
#line 258
 testRunner.Then("Verify Value Selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 259
 testRunner.Then("ReturnsToHome", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Edit Form → Manipulate Radio Buttons")]
        public virtual void EditFormManipulateRadioButtons()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit Form → Manipulate Radio Buttons", null, ((string[])(null)));
#line 262
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table53.AddRow(new string[] {
                        "DetailsNeeded",
                        "false"});
#line 263
 testRunner.Given("Not Started Order Opened", ((string)(null)), table53, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table54.AddRow(new string[] {
                        "FormType",
                        "WorkWave Test Automation Form Example"});
#line 266
 testRunner.When("Form Added", ((string)(null)), table54, "When ");
#line 269
 testRunner.When("Start Form Editing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table55.AddRow(new string[] {
                        "FieldName",
                        "Yes"});
#line 270
 testRunner.When("Manipulate Radio Button", ((string)(null)), table55, "When ");
#line 273
 testRunner.Then("Verify Radio Button Clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 274
 testRunner.Then("ReturnsToHome", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Edit Form → Insert Image → Sketches")]
        public virtual void EditFormInsertImageSketches()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit Form → Insert Image → Sketches", null, ((string[])(null)));
#line 277
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table56.AddRow(new string[] {
                        "DetailsNeeded",
                        "false"});
#line 278
 testRunner.Given("Not Started Order Opened", ((string)(null)), table56, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table57.AddRow(new string[] {
                        "SketchBackground",
                        "Grid"});
#line 281
 testRunner.Given("New Sketch Opened", ((string)(null)), table57, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table58.AddRow(new string[] {
                        "Tool",
                        "Objects"});
            table58.AddRow(new string[] {
                        "SubTool",
                        "AC Unit"});
            table58.AddRow(new string[] {
                        "SketchName",
                        "autoMapSketch"});
#line 284
 testRunner.When("Object Added To Sketch", ((string)(null)), table58, "When ");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table59.AddRow(new string[] {
                        "SketchName",
                        "autoMapSketch"});
#line 289
 testRunner.When("New Sketch Saved", ((string)(null)), table59, "When ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table60.AddRow(new string[] {
                        "FormType",
                        "WorkWave Test Automation Form Example"});
#line 292
 testRunner.When("Form Added", ((string)(null)), table60, "When ");
#line 295
 testRunner.When("Start Form Editing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 296
 testRunner.When("Resize The Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table61.AddRow(new string[] {
                        "FormType",
                        "WorkWave Test Automation Form Example"});
            table61.AddRow(new string[] {
                        "DocumentType",
                        "Sketches"});
            table61.AddRow(new string[] {
                        "SketchName",
                        "autoMapSketch"});
#line 297
 testRunner.When("Insert Sketch To Form", ((string)(null)), table61, "When ");
#line 302
 testRunner.Then("Verify Image Added", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 303
 testRunner.Then("ReturnsToHome", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Edit Form → Capture Signature,Manipulate Checkbox")]
        public virtual void EditFormCaptureSignatureManipulateCheckbox()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit Form → Capture Signature,Manipulate Checkbox", null, ((string[])(null)));
#line 306
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table62.AddRow(new string[] {
                        "DetailsNeeded",
                        "false"});
#line 307
 testRunner.Given("Not Started Order Opened", ((string)(null)), table62, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table63.AddRow(new string[] {
                        "FormType",
                        "WorkWave Test Automation Form Example"});
#line 310
 testRunner.When("Form Added", ((string)(null)), table63, "When ");
#line 313
 testRunner.When("Start Form Editing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 314
 testRunner.When("Resize The Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 315
 testRunner.When("Capture The Signature", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 316
 testRunner.Then("Verify Signature Captured", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table64.AddRow(new string[] {
                        "FieldName",
                        "Recurring"});
#line 317
 testRunner.When("Manipulate CheckBox", ((string)(null)), table64, "When ");
#line 320
 testRunner.Then("Verify CheckBox Selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 321
 testRunner.Then("ReturnsToHome", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

